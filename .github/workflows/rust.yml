name: Build Rust Project on Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-pc-windows-msvc]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install required target
      run: rustup target add ${{ matrix.target }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Prepare binary for upload
      run: |
        mkdir -p dist
        cp target/${{ matrix.target }}/release/puller dist/puller-${{ matrix.target }}

    - name: Upload binary to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/puller-${{ matrix.target }}
        asset_name: puller-${{ matrix.target }}.zip
        asset_content_type: application/zip

